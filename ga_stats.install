<?php

/**
 * Implements hook_requirements().
 */
function ga_stats_requirements($phase) {
  if ($phase != runtime) {
    return;
  }

  $t = get_t();
  $requirements = array();
  if (!ga_stats_is_ready()) {
    $requirements['ga_stats_ready'] = array(
      'title' => $t('GA Stats Connection'),
      'value' => l($t('Not Configured'), 'admin/config/services/ga_stats'),
      'description' => $t('The GA Stats module is not configured for use. Any dependent functionality is broken.'),
      'severity' => REQUIREMENT_ERROR,
    );
  }

  return $requirements;
}

/**
 * Implements hook_schema()
 */
function ga_stats_schema() {
  $schema = array();

  $schema['ga_stats_count'] = array(
    'description' => 'Stores counts for different metics.',
    'fields' => array(
      'nid' => array(
        'type' => 'int',
        'not null' => FALSE,
        'description' => 'nid of related node',
      ),
      'url' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
        'description' => 'URL of page',
      ),
      'metric' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
        'description' => 'name of tracked metric',
      ),
      'timeframe' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
        'description' => 'timeframe delimiter of metric'
      ),
      'count' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'number of hits recorded for the metric',
      ),
    ),
    'indexes' => array(
      'ga_stats_metric' => array('metric'),
      'ga_stats_timeframe' => array('timeframe'),
      'ga_stats_nid' => array('nid'),
      'ga_stats_count' => array('count'),
    )
  );
  return $schema;
}

/**
 * Implements of hook_uninstall
 */
function ga_stats_uninstall() {
  variable_del('ga_stats_email');
  variable_del('ga_stats_password');
  variable_del('ga_stats_profile');
  variable_del('ga_stats_acct_type');
  variable_del('ga_stats_last_update');
}

/**
 * Add an index to the published date value field
 */
function ga_stats_update_7101(&$sandbox) {
  try {
    db_add_index('ga_stats_count', 'ga_stats_count', array('count'));
  }
  catch (FieldException $e) {
    throw new DrupalUpdateException($e->getMessage());
  }
}
